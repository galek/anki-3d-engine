SET(ANKI_CORE_SOURCES App.cpp Async.cpp Logger.cpp StdinListener.cpp ThreadPool.cpp WorkingThread.cpp Timestamp.cpp Counters.cpp)

IF(${ANKI_WINDOW_BACKEND} STREQUAL "GLXX11")
	SET(ANKI_CORE_SOURCES ${ANKI_CORE_SOURCES} NativeWindowGlxX11.cpp)
ELSEIF(${ANKI_WINDOW_BACKEND} STREQUAL "EGLX11")
	SET(ANKI_CORE_SOURCES ${ANKI_CORE_SOURCES} NativeWindowEglX11.cpp)
ELSEIF(${ANKI_WINDOW_BACKEND} STREQUAL "EGLFBDEV")
	SET(ANKI_CORE_SOURCES ${ANKI_CORE_SOURCES} NativeWindowEglFbdev.cpp)
ELSEIF(${ANKI_WINDOW_BACKEND} STREQUAL "MACOS")
	SET(ANKI_CORE_SOURCES ${ANKI_CORE_SOURCES} NativeWindowMacos.cpp)
ELSEIF(${ANKI_WINDOW_BACKEND} STREQUAL "ANDROID")
	SET(ANKI_CORE_SOURCES ${ANKI_CORE_SOURCES} NativeWindowAndroid.cpp)
ELSEIF(${ANKI_WINDOW_BACKEND} STREQUAL "DUMMY")
	SET(ANKI_CORE_SOURCES ${ANKI_CORE_SOURCES} NativeWindowDummy.cpp)
ELSE()
	MESSAGE(FATAL_ERROR "Unrecognized ANKI_WINDOW_BACKEND: ${ANKI_WINDOW_BACKEND}")
ENDIF()

ADD_LIBRARY(ankicore ${ANKI_CORE_SOURCES})

#include "light.h"
#include "collision.h"
#include "renderer.h"
#include "light_props.h"


//=====================================================================================================================================
// Init [point_light_t]                                                                                                               =
//=====================================================================================================================================
void point_light_t::Init( const char* filename )
{
	light_props = rsrc::light_props.Load( filename );
	radius = light_props->GetRadius();
}


//=====================================================================================================================================
// Init [spot_light_t]                                                                                                                =
//=====================================================================================================================================
void spot_light_t::Init( const char* filename )
{
	light_props = rsrc::light_props.Load( filename );
	camera.SetAll( light_props->GetFovX(), light_props->GetFovY(), 0.2, light_props->GetDistance() );
	casts_shadow = light_props->CastsShadow();
	if( light_props->GetTexture() == NULL )
	{
		ERROR( "Light properties \"" << light_props->GetName() << "\" do not have a texture" );
		return;
	}
}


//=====================================================================================================================================
// Deinit                                                                                                                             =
//=====================================================================================================================================
void light_t::Deinit()
{
	rsrc::light_props.Unload( light_props );
}


//=====================================================================================================================================
// RenderSphere                                                                                                                       =
//=====================================================================================================================================
static void RenderSphere( const mat4_t& tsl, const vec3_t& col )
{
	glPushMatrix();
	r::MultMatrix( tsl );

	r::Color3( col );
	r::dbg::RenderSphere( 1.0/8.0, 8 );

	glPopMatrix();
}


//=====================================================================================================================================
// Render                                                                                                                             =
//=====================================================================================================================================
void point_light_t::Render()
{
	RenderSphere( transformation_wspace, light_props->GetDiffuseColor() );
}


//=====================================================================================================================================
// Render                                                                                                                             =
//=====================================================================================================================================
void spot_light_t::Render()
{
	RenderSphere( transformation_wspace, light_props->GetDiffuseColor() );
}

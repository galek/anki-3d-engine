#include "Light.h"
#include "collision.h"
#include "renderer.h"
#include "LightProps.h"


//=====================================================================================================================================
// init [PointLight]                                                                                                               =
//=====================================================================================================================================
void PointLight::init( const char* filename )
{
	lightProps = rsrc::light_props.load( filename );
	radius = lightProps->getRadius();
}


//=====================================================================================================================================
// init [SpotLight]                                                                                                                =
//=====================================================================================================================================
void SpotLight::init( const char* filename )
{
	lightProps = rsrc::light_props.load( filename );
	camera.setAll( lightProps->getFovX(), lightProps->getFovY(), 0.2, lightProps->getDistance() );
	castsShadow = lightProps->castsShadow();
	if( lightProps->getTexture() == NULL )
	{
		ERROR( "Light properties \"" << lightProps->getName() << "\" do not have a texture" );
		return;
	}
}


//=====================================================================================================================================
// deinit                                                                                                                             =
//=====================================================================================================================================
void Light::deinit()
{
	rsrc::light_props.unload( lightProps );
}


//=====================================================================================================================================
// RenderSphere                                                                                                                       =
//=====================================================================================================================================
static void RenderSphere( const mat4_t& tsl, const vec3_t& col )
{
	glPushMatrix();
	r::MultMatrix( tsl );

	r::Color3( col );
	r::dbg::RenderSphere( 1.0/8.0, 8 );

	glPopMatrix();
}


//=====================================================================================================================================
// render                                                                                                                             =
//=====================================================================================================================================
void PointLight::render()
{
	RenderSphere( transformationWspace, lightProps->getDiffuseColor() );
}


//=====================================================================================================================================
// render                                                                                                                             =
//=====================================================================================================================================
void SpotLight::render()
{
	RenderSphere( transformationWspace, lightProps->getDiffuseColor() );
}

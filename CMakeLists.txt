CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(ANKI_PROJ)

#
# Install
#
SET(INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/include/" CACHE PATH "The subdirectory to the header prefix")
SET(LIB_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/lib" CACHE PATH "Library install path")

#
# SVN
#
FIND_PACKAGE(Subversion)
IF(Subversion_FOUND)
	Subversion_WC_INFO(${CMAKE_CURRENT_SOURCE_DIR} ER)
	ADD_DEFINITIONS("-DANKI_REVISION=${ER_WC_REVISION}")
ELSE()
	ADD_DEFINITIONS("-DANKI_REVISION=???")
ENDIF()

# 
# Version
#
SET(ANKI_VERSION 0.1)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/anki/Version.h 
	${CMAKE_CURRENT_BINARY_DIR}/anki/Version.h)

INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/anki/Version.h 
	DESTINATION ${INCLUDE_INSTALL_DIR}/anki)
	
#
# Doxygen
#
FIND_PACKAGE(Doxygen)
IF(DOXYGEN_FOUND)
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/docs/doxyfile ${CMAKE_CURRENT_BINARY_DIR}/doxyfile @ONLY)
	
	ADD_CUSTOM_TARGET(doc
${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/doxyfile
WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} COMMENT "Generating API documentation with Doxygen" VERBATIM)
ENDIF()

#
# Defines & flags
#
ADD_DEFINITIONS("-DANKI_MATH_INTEL_SIMD -DGLEW_MX -pedantic-errors -pedantic -ansi -Wall -Winline -W -Wwrite-strings -Wno-unused -Wno-long-long -msse4")

# Add a few compiler specific stuff 
IF(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+$")	
	# Do nothing
ELSE()
	ADD_DEFINITIONS("-fsingle-precision-constant")
ENDIF()

IF(${CMAKE_SYSTEM_NAME} STREQUAL Linux)
	ADD_DEFINITIONS("-DPLATFORM_LINUX")
ELSEIF(${CMAKE_SYSTEM_NAME} STREQUAL Windows)
	ADD_DEFINITIONS("-DPLATFORM_WINDOWS")
ENDIF()

IF(CMAKE_BUILD_TYPE STREQUAL Debug)
	ADD_DEFINITIONS("-D_GLIBCXX_DEBUG -D_GLIBXX_DEBUG_PEDANTIC")
ELSE()
	ADD_DEFINITIONS("-DBOOST_DISABLE_ASSERTS -mtune=core2 -ffast-math")
ENDIF()


INCLUDE_DIRECTORIES("${ANKI_PROJ_SOURCE_DIR}/extern/include")
INCLUDE_DIRECTORIES("${ANKI_PROJ_SOURCE_DIR}/extern/include/bullet") # Because bullet wants it
INCLUDE_DIRECTORIES("/usr/include/python2.6")
INCLUDE_DIRECTORIES("/usr/include/freetype2")
INCLUDE_DIRECTORIES(.)

LINK_DIRECTORIES(${ANKI_PROJ_SOURCE_DIR}/extern/lib64)

# Lib dependencies
FIND_PACKAGE(Boost 1.46 REQUIRED)
FIND_PACKAGE(PNG 1.2 REQUIRED)
FIND_PACKAGE(JPEG 62 REQUIRED)
FIND_PACKAGE(Freetype 2.4.4 REQUIRED)
FIND_PACKAGE(PythonLibs 2.6 REQUIRED)

#
# libanki
#
ADD_SUBDIRECTORY(anki)

#
# Unit tests
#
OPTION(BUILD_UNIT_TESTS "Build Unit Tests" OFF)

IF(BUILD_UNIT_TESTS)
	ENABLE_TESTING()
	ADD_SUBDIRECTORY(unit-tests)
ENDIF()

#
# testapp
#
OPTION(BUILD_TESTAPP "Build Test Application" ON)

IF(BUILD_TESTAPP)
	ADD_SUBDIRECTORY(testapp)
ENDIF()
